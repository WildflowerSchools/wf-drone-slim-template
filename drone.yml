kind: pipeline
type: kubernetes
name: drone
service_account_name: default

metadata:
  namespace: drone

steps:
- name: set-tag
  image: python:3.9
  environment:
    DRONE: "true"
  commands:
  - echo -n v$DRONE_BUILD_NUMBER > .tags
  - cat .tags
- name: docker-build
  image: plugins/docker
  when:
    branch:
    - main
    event:
      exclude:
      - pull_request
  settings:
    dockerfile: Dockerfile
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    purge: false
    repo: wildflowerschools/wf-drone-slim-template
- name: docker-build-slim
  image: docker:dind
  environment:
    DRONE: "true"
    USERNAME:
      from_secret: docker_username
    PASSWORD:
      from_secret: docker_password
    TAG: wildflowerschools/wf-drone-slim-template
  commands:
    - export TAG_WITH_VERSION=$TAG:v$DRONE_BUILD_NUMBER
    - export TAG_WITH_VERSION_SLIM=$TAG_WITH_VERSION-slim
    - sleep 8 # give docker enough time to start
    # Pull recently built image from docker hub
    - docker pull $TAG_WITH_VERSION
    # Optionally, rebuild 'fat' image from Dockerfile
    # - docker run -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):/app dslim/docker-slim build --dockerfile Dockerfile --tag $TAG_WITH_VERSION /app
    - docker run -v /var/run/docker.sock:/var/run/docker.sock dslim/docker-slim build --tag $TAG_WITH_VERSION_SLIM $TAG_WITH_VERSION
    - docker images
    - docker login -u $USERNAME -p $PASSWORD
    - docker push $TAG_WITH_VERSION_SLIM
  volumes:
    - name: dockersock
      path: /var/run

services:
  - name: docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}